{
    "source": 1,
    "revision": 5,
    "description": null,
    "isDeleted": false,
    "variables": {
        "REASON": {
            "value": "Azure DevOps CD Pipeline",
            "allowOverride": true
        },
        "REPO_NAME": {
            "value": "ingestion"
        },
        "SERVICE_NAME": {
            "value": "ingestion"
        }
    },
    "variableGroups": [],
    "environments": [{
            "id": 26,
            "name": "dev",
            "rank": 1,
            "owner": {
                "id": "AZURE_DEVOPS_USER_ID_VAR_VAL"
            },
            "variables": {
                "AI_IKEY": {
                    "value": "DEV_AI_IKEY_VAR_VAL",
                    "isSecret": true
                },
                "EXTERNAL_INGEST_FQDN": {
                    "value": "DEV_EXTERNAL_INGEST_FQDN_VAR_VAL"
                },
                "INGESTION_ACCESS_KEY_VALUE": {
                    "value": "DEV_INGESTION_ACCESS_KEY_VALUE_VAR_VAL",
                    "isSecret": true
                },
                "INGESTION_QUEUE_NAME": {
                    "value": "DEV_INGESTION_QUEUE_NAME_VAR_VAL"
                },
                "INGESTION_QUEUE_NAMESPACE": {
                    "value": "DEV_INGESTION_QUEUE_NAMESPACE_VAR_VAL"
                },
                "INGRESS_TLS_SECRET_CERT": {
                    "value": "DEV_INGRESS_TLS_SECRET_CERT_VAR_VAL"
                },
                "INGRESS_TLS_SECRET_KEY": {
                    "value": "DEV_INGRESS_TLS_SECRET_KEY_VAR_VAL",
                    "isSecret": true
                },
                "INGRESS_TLS_SECRET_NAME": {
                    "value": "DEV_INGRESS_TLS_SECRET_NAME_VAR_VAL"
                },
                "ACR_SERVER": {
                    "value": "DEV_ACR_SERVER_VAR_VAL"
                },
                "ACR_NAME": {
                    "value": "DEV_ACR_NAME_VAR_VAL"
                }
            },
            "variableGroups": [],
            "preDeployApprovals": {
                "approvals": [{
                    "rank": 1,
                    "isAutomated": true,
                    "isNotificationOn": false,
                    "id": 78
                }],
                "approvalOptions": {
                    "requiredApproverCount": null,
                    "releaseCreatorCanBeApprover": false,
                    "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
                    "enforceIdentityRevalidation": false,
                    "timeoutInMinutes": 0,
                    "executionOrder": 1
                }
            },
            "deployStep": {
                "id": 85
            },
            "postDeployApprovals": {
                "approvals": [{
                    "rank": 1,
                    "isAutomated": true,
                    "isNotificationOn": false,
                    "id": 86
                }],
                "approvalOptions": {
                    "requiredApproverCount": null,
                    "releaseCreatorCanBeApprover": false,
                    "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
                    "enforceIdentityRevalidation": false,
                    "timeoutInMinutes": 0,
                    "executionOrder": 2
                }
            },
            "deployPhases": [{
                "deploymentInput": {
                    "parallelExecution": {
                        "parallelExecutionType": 0
                    },
                    "skipArtifactsDownload": false,
                    "artifactsDownloadInput": {
                        "downloadInputs": []
                    },
                    "queueId": AZURE_DEVOPS_INGESTION_QUEUE_ID_VAR_VAL,
                    "demands": [],
                    "enableAccessToken": false,
                    "timeoutInMinutes": 0,
                    "jobCancelTimeoutInMinutes": 1,
                    "condition": "succeeded()",
                    "overrideInputs": {}
                },
                "rank": 1,
                "phaseType": 1,
                "name": "Agent job",
                "refName": null,
                "workflowTasks": [{
                        "environment": {},
                        "taskId": "068d5909-43e6-48c5-9e01-7c8a94816220",
                        "version": "0.*",
                        "name": "install helm 2.12.3",
                        "refName": "",
                        "enabled": true,
                        "alwaysRun": false,
                        "continueOnError": false,
                        "timeoutInMinutes": 0,
                        "definitionType": "task",
                        "overrideInputs": {},
                        "condition": "succeeded()",
                        "inputs": {
                            "helmVersion": "2.12.3",
                            "checkLatestHelmVersion": "false",
                            "installKubeCtl": "true",
                            "kubectlVersion": "1.12.4",
                            "checkLatestKubeCtl": "false"
                        }
                    },
                    {
                        "environment": {},
                        "taskId": "afa7d54d-537b-4dc8-b60a-e0eeea2c9a87",
                        "version": "0.*",
                        "name": "helm init",
                        "refName": "",
                        "enabled": true,
                        "alwaysRun": false,
                        "continueOnError": false,
                        "timeoutInMinutes": 0,
                        "definitionType": null,
                        "overrideInputs": {},
                        "condition": "succeeded()",
                        "inputs": {
                            "connectionType": "$(Parameters.connectionType)",
                            "azureSubscriptionEndpoint": "$(Parameters.azureSubscriptionEndpoint)",
                            "azureResourceGroup": "$(Parameters.azureResourceGroup)",
                            "kubernetesCluster": "$(Parameters.kubernetesCluster)",
                            "kubernetesServiceEndpoint": "$(Parameters.kubernetesServiceEndpoint)",
                            "namespace": "",
                            "command": "init",
                            "chartType": "Name",
                            "chartName": "",
                            "chartPath": "",
                            "version": "",
                            "releaseName": "",
                            "overrideValues": "",
                            "valueFile": "",
                            "destination": "$(Build.ArtifactStagingDirectory)",
                            "canaryimage": "false",
                            "upgradetiller": "true",
                            "updatedependency": "false",
                            "save": "true",
                            "install": "true",
                            "recreate": "false",
                            "resetValues": "false",
                            "force": "false",
                            "waitForExecution": "true",
                            "arguments": "--service-account tiller",
                            "enableTls": "false",
                            "caCert": "",
                            "certificate": "",
                            "privatekey": "",
                            "tillernamespace": ""
                        }
                    },
                    {
                        "environment": {},
                        "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
                        "version": "1.*",
                        "name": "add helm repo",
                        "refName": "",
                        "enabled": true,
                        "alwaysRun": false,
                        "continueOnError": false,
                        "timeoutInMinutes": 0,
                        "definitionType": "task",
                        "overrideInputs": {},
                        "condition": "succeeded()",
                        "inputs": {
                            "connectedServiceNameARM": "AZURE_DEVOPS_SERVICE_CONN_ID_VAR_VAL",
                            "scriptLocation": "inlineScript",
                            "scriptPath": "",
                            "inlineScript": "az acr helm repo add --name $(ACR_NAME)",
                            "args": "",
                            "addSpnToEnvironment": "false",
                            "useGlobalConfig": "false",
                            "cwd": "",
                            "failOnStandardError": "false"
                        }
                    },
                    {
                        "environment": {},
                        "taskId": "afa7d54d-537b-4dc8-b60a-e0eeea2c9a87",
                        "version": "0.*",
                        "name": "helm upgrade ingestion dev",
                        "refName": "",
                        "enabled": true,
                        "alwaysRun": false,
                        "continueOnError": false,
                        "timeoutInMinutes": 0,
                        "definitionType": null,
                        "overrideInputs": {},
                        "condition": "succeeded()",
                        "inputs": {
                            "connectionType": "$(Parameters.connectionType)",
                            "azureSubscriptionEndpoint": "$(Parameters.azureSubscriptionEndpoint)",
                            "azureResourceGroup": "$(Parameters.azureResourceGroup)",
                            "kubernetesCluster": "$(Parameters.kubernetesCluster)",
                            "kubernetesServiceEndpoint": "$(Parameters.kubernetesServiceEndpoint)",
                            "namespace": "backend-dev",
                            "command": "upgrade",
                            "chartType": "Name",
                            "chartName": "$(ACR_NAME)/$(REPO_NAME)",
                            "chartPath": "",
                            "version": "",
                            "releaseName": "$(REPO_NAME)-$(Build.SourceBranchName)-dev",
                            "overrideValues": "image.tag=$(Build.SourceBranchName),image.repository=$(REPO_NAME),dockerregistry=$(ACR_SERVER),ingress.hosts[0].name=$(EXTERNAL_INGEST_FQDN),ingress.hosts[0].serviceName=$(SERVICE_NAME),ingress.hosts[0].tls=true,ingress.hosts[0].tlsSecretName=$(INGRESS_TLS_SECRET_NAME),ingress.tls.secrets[0].name=$(INGRESS_TLS_SECRET_NAME),ingress.tls.secrets[0].key=\"$(INGRESS_TLS_SECRET_KEY)\",ingress.tls.secrets[0].certificate=\"$(INGRESS_TLS_SECRET_CERT)\",secrets.appinsights.ikey=$(AI_IKEY),secrets.queue.keyname=IngestionServiceAccessKey,secrets.queue.keyvalue=$(INGESTION_ACCESS_KEY_VALUE),secrets.queue.name=$(INGESTION_QUEUE_NAME),secrets.queue.namespace=$(INGESTION_QUEUE_NAMESPACE),reason=\"$(REASON)\",tags.dev=true",
                            "valueFile": "",
                            "destination": "",
                            "canaryimage": "false",
                            "upgradetiller": "false",
                            "updatedependency": "false",
                            "save": "true",
                            "install": "true",
                            "recreate": "false",
                            "resetValues": "false",
                            "force": "true",
                            "waitForExecution": "false",
                            "arguments": "--version $(Build.SourceBranchName)",
                            "enableTls": "false",
                            "caCert": "",
                            "certificate": "",
                            "privatekey": "",
                            "tillernamespace": ""
                        }
                    }
                ]
            }],
            "environmentOptions": {
                "emailNotificationType": "OnlyOnFailure",
                "emailRecipients": "release.environment.owner;release.creator",
                "skipArtifactsDownload": false,
                "timeoutInMinutes": 0,
                "enableAccessToken": false,
                "publishDeploymentStatus": true,
                "badgeEnabled": false,
                "autoLinkWorkItems": false,
                "pullRequestDeploymentEnabled": false
            },
            "demands": [],
            "conditions": [{
                "name": "ReleaseStarted",
                "conditionType": 1,
                "value": ""
            }],
            "executionPolicy": {
                "concurrencyCount": 1,
                "queueDepthCount": 0
            },
            "schedules": [],
            "retentionPolicy": {
                "daysToKeep": 30,
                "releasesToKeep": 3,
                "retainBuild": true
            },
            "processParameters": {
                "inputs": [{
                        "aliases": [],
                        "options": {
                            "Azure Resource Manager": "Azure Resource Manager",
                            "Kubernetes Service Connection": "Kubernetes Service Connection"
                        },
                        "properties": {
                            "EditableOptions": "false"
                        },
                        "name": "connectionType",
                        "label": "Connection Type.",
                        "defaultValue": "Azure Resource Manager",
                        "type": "pickList",
                        "helpMarkDown": "",
                        "groupName": ""
                    },
                    {
                        "aliases": [],
                        "options": {},
                        "properties": {},
                        "name": "azureSubscriptionEndpoint",
                        "label": "Azure subscription",
                        "defaultValue": "AZURE_DEVOPS_SERVICE_CONN_ID_VAR_VAL",
                        "required": true,
                        "type": "connectedService:AzureRM",
                        "helpMarkDown": "Select an Azure subscription, which has your Azure Container Registry.",
                        "visibleRule": "connectionType = Azure Resource Manager",
                        "groupName": ""
                    },
                    {
                        "aliases": [],
                        "options": {},
                        "properties": {
                            "EditableOptions": "True"
                        },
                        "name": "azureResourceGroup",
                        "label": "Resource group",
                        "defaultValue": "RESOURCE_GROUP_VAR_VAL",
                        "required": true,
                        "type": "pickList",
                        "helpMarkDown": "Select an Azure Resource Group.",
                        "visibleRule": "connectionType = Azure Resource Manager",
                        "groupName": ""
                    },
                    {
                        "aliases": [],
                        "options": {},
                        "properties": {
                            "EditableOptions": "True"
                        },
                        "name": "kubernetesCluster",
                        "label": "Kubernetes cluster",
                        "defaultValue": "CLUSTER_NAME_VAR_VAL",
                        "required": true,
                        "type": "pickList",
                        "helpMarkDown": "Select an Azure Kubernetes Service cluster.",
                        "visibleRule": "connectionType = Azure Resource Manager",
                        "groupName": ""
                    },
                    {
                        "aliases": [],
                        "options": {},
                        "properties": {},
                        "name": "kubernetesServiceEndpoint",
                        "label": "Kubernetes Service Connection",
                        "defaultValue": "",
                        "required": true,
                        "type": "connectedService:kubernetes",
                        "helpMarkDown": "Select a Kubernetes service connection.",
                        "visibleRule": "connectionType = Kubernetes Service Connection",
                        "groupName": ""
                    }
                ],
                "dataSourceBindings": [{
                        "parameters": {},
                        "endpointId": "$(azureSubscriptionEndpoint)",
                        "target": "kubernetesCluster",
                        "resultTemplate": "{{{name}}}",
                        "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/resourceGroups/$(azureResourceGroup)/providers/Microsoft.ContainerService/managedClusters?api-version=2017-08-31",
                        "resultSelector": "jsonpath:$.value[*]"
                    },
                    {
                        "parameters": {},
                        "endpointId": "$(azureSubscriptionEndpoint)",
                        "target": "azureResourceGroup",
                        "resultTemplate": "{{{ #extractResource id resourcegroups}}}",
                        "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/providers/Microsoft.ContainerService/managedClusters?api-version=2017-08-31",
                        "resultSelector": "jsonpath:$.value[*]"
                    }
                ]
            },
            "properties": {},
            "preDeploymentGates": {
                "id": 0,
                "gatesOptions": null,
                "gates": []
            },
            "postDeploymentGates": {
                "id": 0,
                "gatesOptions": null,
                "gates": []
            },
            "environmentTriggers": [],
            "badgeUrl": null
        },
        {
            "id": 27,
            "name": "QA",
            "rank": 2,
            "owner": {
                "id": "AZURE_DEVOPS_USER_ID_VAR_VAL"
            },
            "variables": {
                "AI_IKEY": {
                    "value": "QA_AI_IKEY_VAR_VAL",
                    "isSecret": true
                },
                "EXTERNAL_INGEST_FQDN": {
                    "value": "QA_EXTERNAL_INGEST_FQDN_VAR_VAL"
                },
                "INGESTION_ACCESS_KEY_VALUE": {
                    "value": "QA_INGESTION_ACCESS_KEY_VALUE_VAR_VAL",
                    "isSecret": true
                },
                "INGESTION_QUEUE_NAME": {
                    "value": "QA_INGESTION_QUEUE_NAME_VAR_VAL"
                },
                "INGESTION_QUEUE_NAMESPACE": {
                    "value": "QA_INGESTION_QUEUE_NAMESPACE_VAR_VAL"
                },
                "INGRESS_TLS_SECRET_CERT": {
                    "value": "QA_INGRESS_TLS_SECRET_CERT_VAR_VAL"
                },
                "INGRESS_TLS_SECRET_KEY": {
                    "value": "QA_INGRESS_TLS_SECRET_KEY_VAR_VAL",
                    "isSecret": true
                },
                "INGRESS_TLS_SECRET_NAME": {
                    "value": "QA_INGRESS_TLS_SECRET_NAME_VAR_VAL"
                },
                "ACR_SERVER": {
                    "value": "QA_ACR_SERVER_VAR_VAL"
                },
                "ACR_NAME": {
                    "value": "QA_ACR_NAME_VAR_VAL"
                }
            },
            "variableGroups": [],
            "preDeployApprovals": {
                "approvals": [{
                    "rank": 1,
                    "isAutomated": true,
                    "isNotificationOn": false,
                    "id": 79
                }],
                "approvalOptions": {
                    "requiredApproverCount": null,
                    "releaseCreatorCanBeApprover": false,
                    "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
                    "enforceIdentityRevalidation": false,
                    "timeoutInMinutes": 0,
                    "executionOrder": 1
                }
            },
            "deployStep": {
                "id": 84
            },
            "postDeployApprovals": {
                "approvals": [{
                    "rank": 1,
                    "isAutomated": true,
                    "isNotificationOn": false,
                    "id": 87
                }],
                "approvalOptions": {
                    "requiredApproverCount": null,
                    "releaseCreatorCanBeApprover": false,
                    "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
                    "enforceIdentityRevalidation": false,
                    "timeoutInMinutes": 0,
                    "executionOrder": 2
                }
            },
            "deployPhases": [{
                "deploymentInput": {
                    "parallelExecution": {
                        "parallelExecutionType": 0
                    },
                    "skipArtifactsDownload": false,
                    "artifactsDownloadInput": {
                        "downloadInputs": []
                    },
                    "queueId": AZURE_DEVOPS_INGESTION_QUEUE_ID_VAR_VAL,
                    "demands": [],
                    "enableAccessToken": false,
                    "timeoutInMinutes": 0,
                    "jobCancelTimeoutInMinutes": 1,
                    "condition": "succeeded()",
                    "overrideInputs": {}
                },
                "rank": 1,
                "phaseType": 1,
                "name": "Agent job",
                "refName": null,
                "workflowTasks": [{
                        "environment": {},
                        "taskId": "068d5909-43e6-48c5-9e01-7c8a94816220",
                        "version": "0.*",
                        "name": "install helm 2.12.3",
                        "refName": "",
                        "enabled": true,
                        "alwaysRun": false,
                        "continueOnError": false,
                        "timeoutInMinutes": 0,
                        "definitionType": "task",
                        "overrideInputs": {},
                        "condition": "succeeded()",
                        "inputs": {
                            "helmVersion": "2.12.3",
                            "checkLatestHelmVersion": "false",
                            "installKubeCtl": "true",
                            "kubectlVersion": "1.12.4",
                            "checkLatestKubeCtl": "false"
                        }
                    },
                    {
                        "environment": {},
                        "taskId": "afa7d54d-537b-4dc8-b60a-e0eeea2c9a87",
                        "version": "0.*",
                        "name": "helm init",
                        "refName": "",
                        "enabled": true,
                        "alwaysRun": false,
                        "continueOnError": false,
                        "timeoutInMinutes": 0,
                        "definitionType": null,
                        "overrideInputs": {},
                        "condition": "succeeded()",
                        "inputs": {
                            "connectionType": "$(Parameters.connectionType)",
                            "azureSubscriptionEndpoint": "$(Parameters.azureSubscriptionEndpoint)",
                            "azureResourceGroup": "$(Parameters.azureResourceGroup)",
                            "kubernetesCluster": "$(Parameters.kubernetesCluster)",
                            "kubernetesServiceEndpoint": "$(Parameters.kubernetesServiceEndpoint)",
                            "namespace": "",
                            "command": "init",
                            "chartType": "Name",
                            "chartName": "",
                            "chartPath": "",
                            "version": "",
                            "releaseName": "",
                            "overrideValues": "",
                            "valueFile": "",
                            "destination": "$(Build.ArtifactStagingDirectory)",
                            "canaryimage": "false",
                            "upgradetiller": "true",
                            "updatedependency": "false",
                            "save": "true",
                            "install": "true",
                            "recreate": "false",
                            "resetValues": "false",
                            "force": "false",
                            "waitForExecution": "true",
                            "arguments": "--service-account tiller",
                            "enableTls": "false",
                            "caCert": "",
                            "certificate": "",
                            "privatekey": "",
                            "tillernamespace": ""
                        }
                    },
                    {
                        "environment": {},
                        "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
                        "version": "1.*",
                        "name": "add helm repo",
                        "refName": "",
                        "enabled": true,
                        "alwaysRun": false,
                        "continueOnError": false,
                        "timeoutInMinutes": 0,
                        "definitionType": "task",
                        "overrideInputs": {},
                        "condition": "succeeded()",
                        "inputs": {
                            "connectedServiceNameARM": "AZURE_DEVOPS_SERVICE_CONN_ID_VAR_VAL",
                            "scriptLocation": "inlineScript",
                            "scriptPath": "",
                            "inlineScript": "az acr helm repo add --name $(ACR_NAME)",
                            "args": "",
                            "addSpnToEnvironment": "false",
                            "useGlobalConfig": "false",
                            "cwd": "",
                            "failOnStandardError": "false"
                        }
                    },
                    {
                        "environment": {},
                        "taskId": "afa7d54d-537b-4dc8-b60a-e0eeea2c9a87",
                        "version": "0.*",
                        "name": "helm upgrade ingestion qa",
                        "refName": "",
                        "enabled": true,
                        "alwaysRun": false,
                        "continueOnError": false,
                        "timeoutInMinutes": 0,
                        "definitionType": null,
                        "overrideInputs": {},
                        "condition": "succeeded()",
                        "inputs": {
                            "connectionType": "$(Parameters.connectionType)",
                            "azureSubscriptionEndpoint": "$(Parameters.azureSubscriptionEndpoint)",
                            "azureResourceGroup": "$(Parameters.azureResourceGroup)",
                            "kubernetesCluster": "$(Parameters.kubernetesCluster)",
                            "kubernetesServiceEndpoint": "$(Parameters.kubernetesServiceEndpoint)",
                            "namespace": "backend-qa",
                            "command": "upgrade",
                            "chartType": "Name",
                            "chartName": "$(ACR_NAME)/$(REPO_NAME)",
                            "chartPath": "",
                            "version": "",
                            "releaseName": "$(REPO_NAME)-$(Build.SourceBranchName)-qa",
                            "overrideValues": "image.tag=$(Build.SourceBranchName),image.repository=$(REPO_NAME),dockerregistry=$(ACR_SERVER),ingress.hosts[0].name=$(EXTERNAL_INGEST_FQDN),ingress.hosts[0].serviceName=$(SERVICE_NAME),ingress.hosts[0].tls=true,ingress.hosts[0].tlsSecretName=$(INGRESS_TLS_SECRET_NAME),ingress.tls.secrets[0].name=$(INGRESS_TLS_SECRET_NAME),ingress.tls.secrets[0].key=\"$(INGRESS_TLS_SECRET_KEY)\",ingress.tls.secrets[0].certificate=\"$(INGRESS_TLS_SECRET_CERT)\",secrets.appinsights.ikey=$(AI_IKEY),secrets.queue.keyname=IngestionServiceAccessKey,secrets.queue.keyvalue=$(INGESTION_ACCESS_KEY_VALUE),secrets.queue.name=$(INGESTION_QUEUE_NAME),secrets.queue.namespace=$(INGESTION_QUEUE_NAMESPACE),reason=\"$(REASON)\",tags.qa=true",
                            "valueFile": "",
                            "destination": "",
                            "canaryimage": "false",
                            "upgradetiller": "false",
                            "updatedependency": "false",
                            "save": "true",
                            "install": "true",
                            "recreate": "false",
                            "resetValues": "false",
                            "force": "true",
                            "waitForExecution": "false",
                            "arguments": "--version $(Build.SourceBranchName)",
                            "enableTls": "false",
                            "caCert": "",
                            "certificate": "",
                            "privatekey": "",
                            "tillernamespace": ""
                        }
                    }
                ]
            }],
            "environmentOptions": {
                "emailNotificationType": "OnlyOnFailure",
                "emailRecipients": "release.environment.owner;release.creator",
                "skipArtifactsDownload": false,
                "timeoutInMinutes": 0,
                "enableAccessToken": false,
                "publishDeploymentStatus": true,
                "badgeEnabled": false,
                "autoLinkWorkItems": false,
                "pullRequestDeploymentEnabled": false
            },
            "demands": [],
            "conditions": [{
                "name": "dev",
                "conditionType": 2,
                "value": "4"
            }],
            "executionPolicy": {
                "concurrencyCount": 1,
                "queueDepthCount": 0
            },
            "schedules": [],
            "retentionPolicy": {
                "daysToKeep": 30,
                "releasesToKeep": 3,
                "retainBuild": true
            },
            "processParameters": {
                "inputs": [{
                        "aliases": [],
                        "options": {
                            "Azure Resource Manager": "Azure Resource Manager",
                            "Kubernetes Service Connection": "Kubernetes Service Connection"
                        },
                        "properties": {
                            "EditableOptions": "false"
                        },
                        "name": "connectionType",
                        "label": "Connection Type.",
                        "defaultValue": "Azure Resource Manager",
                        "type": "pickList",
                        "helpMarkDown": "",
                        "groupName": ""
                    },
                    {
                        "aliases": [],
                        "options": {},
                        "properties": {},
                        "name": "azureSubscriptionEndpoint",
                        "label": "Azure subscription",
                        "defaultValue": "AZURE_DEVOPS_SERVICE_CONN_ID_VAR_VAL",
                        "required": true,
                        "type": "connectedService:AzureRM",
                        "helpMarkDown": "Select an Azure subscription, which has your Azure Container Registry.",
                        "visibleRule": "connectionType = Azure Resource Manager",
                        "groupName": ""
                    },
                    {
                        "aliases": [],
                        "options": {},
                        "properties": {
                            "EditableOptions": "True"
                        },
                        "name": "azureResourceGroup",
                        "label": "Resource group",
                        "defaultValue": "RESOURCE_GROUP_VAR_VAL",
                        "required": true,
                        "type": "pickList",
                        "helpMarkDown": "Select an Azure Resource Group.",
                        "visibleRule": "connectionType = Azure Resource Manager",
                        "groupName": ""
                    },
                    {
                        "aliases": [],
                        "options": {},
                        "properties": {
                            "EditableOptions": "True"
                        },
                        "name": "kubernetesCluster",
                        "label": "Kubernetes cluster",
                        "defaultValue": "CLUSTER_NAME_VAR_VAL",
                        "required": true,
                        "type": "pickList",
                        "helpMarkDown": "Select an Azure Kubernetes Service cluster.",
                        "visibleRule": "connectionType = Azure Resource Manager",
                        "groupName": ""
                    },
                    {
                        "aliases": [],
                        "options": {},
                        "properties": {},
                        "name": "kubernetesServiceEndpoint",
                        "label": "Kubernetes Service Connection",
                        "defaultValue": "",
                        "required": true,
                        "type": "connectedService:kubernetes",
                        "helpMarkDown": "Select a Kubernetes service connection.",
                        "visibleRule": "connectionType = Kubernetes Service Connection",
                        "groupName": ""
                    }
                ],
                "dataSourceBindings": [{
                        "parameters": {},
                        "endpointId": "$(azureSubscriptionEndpoint)",
                        "target": "kubernetesCluster",
                        "resultTemplate": "{{{name}}}",
                        "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/resourceGroups/$(azureResourceGroup)/providers/Microsoft.ContainerService/managedClusters?api-version=2017-08-31",
                        "resultSelector": "jsonpath:$.value[*]"
                    },
                    {
                        "parameters": {},
                        "endpointId": "$(azureSubscriptionEndpoint)",
                        "target": "azureResourceGroup",
                        "resultTemplate": "{{{ #extractResource id resourcegroups}}}",
                        "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/providers/Microsoft.ContainerService/managedClusters?api-version=2017-08-31",
                        "resultSelector": "jsonpath:$.value[*]"
                    }
                ]
            },
            "properties": {},
            "preDeploymentGates": {
                "id": 0,
                "gatesOptions": null,
                "gates": []
            },
            "postDeploymentGates": {
                "id": 0,
                "gatesOptions": null,
                "gates": []
            },
            "environmentTriggers": [],
            "badgeUrl": null
        },
        {
            "id": 28,
            "name": "staging",
            "rank": 3,
            "owner": {
                "id": "AZURE_DEVOPS_USER_ID_VAR_VAL"
            },
            "variables": {
                "AI_IKEY": {
                    "value": "STAGING_AI_IKEY_VAR_VAL",
                    "isSecret": true
                },
                "EXTERNAL_INGEST_FQDN": {
                    "value": "STAGING_EXTERNAL_INGEST_FQDN_VAR_VAL"
                },
                "INGESTION_ACCESS_KEY_VALUE": {
                    "value": "STAGING_INGESTION_ACCESS_KEY_VALUE_VAR_VAL",
                    "isSecret": true
                },
                "INGESTION_QUEUE_NAME": {
                    "value": "STAGING_INGESTION_QUEUE_NAME_VAR_VAL"
                },
                "INGESTION_QUEUE_NAMESPACE": {
                    "value": "STAGING_INGESTION_QUEUE_NAMESPACE_VAR_VAL"
                },
                "INGRESS_TLS_SECRET_CERT": {
                    "value": "STAGING_INGRESS_TLS_SECRET_CERT_VAR_VAL"
                },
                "INGRESS_TLS_SECRET_KEY": {
                    "value": "STAGING_INGRESS_TLS_SECRET_KEY_VAR_VAL",
                    "isSecret": true
                },
                "INGRESS_TLS_SECRET_NAME": {
                    "value": "STAGING_INGRESS_TLS_SECRET_NAME_VAR_VAL"
                },
                "ACR_SERVER": {
                    "value": "STAGING_ACR_SERVER_VAR_VAL"
                },
                "ACR_NAME": {
                    "value": "STAGING_ACR_NAME_VAR_VAL"
                }
            },
            "variableGroups": [],
            "preDeployApprovals": {
                "approvals": [{
                    "rank": 1,
                    "isAutomated": true,
                    "isNotificationOn": false,
                    "id": 80
                }],
                "approvalOptions": {
                    "requiredApproverCount": null,
                    "releaseCreatorCanBeApprover": false,
                    "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
                    "enforceIdentityRevalidation": false,
                    "timeoutInMinutes": 0,
                    "executionOrder": 1
                }
            },
            "deployStep": {
                "id": 83
            },
            "postDeployApprovals": {
                "approvals": [{
                    "rank": 1,
                    "isAutomated": true,
                    "isNotificationOn": false,
                    "id": 88
                }],
                "approvalOptions": {
                    "requiredApproverCount": null,
                    "releaseCreatorCanBeApprover": false,
                    "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
                    "enforceIdentityRevalidation": false,
                    "timeoutInMinutes": 0,
                    "executionOrder": 2
                }
            },
            "deployPhases": [{
                "deploymentInput": {
                    "parallelExecution": {
                        "parallelExecutionType": 0
                    },
                    "skipArtifactsDownload": false,
                    "artifactsDownloadInput": {
                        "downloadInputs": []
                    },
                    "queueId": AZURE_DEVOPS_INGESTION_QUEUE_ID_VAR_VAL,
                    "demands": [],
                    "enableAccessToken": false,
                    "timeoutInMinutes": 0,
                    "jobCancelTimeoutInMinutes": 1,
                    "condition": "succeeded()",
                    "overrideInputs": {}
                },
                "rank": 1,
                "phaseType": 1,
                "name": "Agent job",
                "refName": null,
                "workflowTasks": [{
                        "environment": {},
                        "taskId": "068d5909-43e6-48c5-9e01-7c8a94816220",
                        "version": "0.*",
                        "name": "install helm 2.12.3",
                        "refName": "",
                        "enabled": true,
                        "alwaysRun": false,
                        "continueOnError": false,
                        "timeoutInMinutes": 0,
                        "definitionType": "task",
                        "overrideInputs": {},
                        "condition": "succeeded()",
                        "inputs": {
                            "helmVersion": "2.12.3",
                            "checkLatestHelmVersion": "false",
                            "installKubeCtl": "true",
                            "kubectlVersion": "1.12.4",
                            "checkLatestKubeCtl": "false"
                        }
                    },
                    {
                        "environment": {},
                        "taskId": "afa7d54d-537b-4dc8-b60a-e0eeea2c9a87",
                        "version": "0.*",
                        "name": "helm init",
                        "refName": "",
                        "enabled": true,
                        "alwaysRun": false,
                        "continueOnError": false,
                        "timeoutInMinutes": 0,
                        "definitionType": null,
                        "overrideInputs": {},
                        "condition": "succeeded()",
                        "inputs": {
                            "connectionType": "$(Parameters.connectionType)",
                            "azureSubscriptionEndpoint": "$(Parameters.azureSubscriptionEndpoint)",
                            "azureResourceGroup": "$(Parameters.azureResourceGroup)",
                            "kubernetesCluster": "$(Parameters.kubernetesCluster)",
                            "kubernetesServiceEndpoint": "$(Parameters.kubernetesServiceEndpoint)",
                            "namespace": "",
                            "command": "init",
                            "chartType": "Name",
                            "chartName": "",
                            "chartPath": "",
                            "version": "",
                            "releaseName": "",
                            "overrideValues": "",
                            "valueFile": "",
                            "destination": "$(Build.ArtifactStagingDirectory)",
                            "canaryimage": "false",
                            "upgradetiller": "true",
                            "updatedependency": "false",
                            "save": "true",
                            "install": "true",
                            "recreate": "false",
                            "resetValues": "false",
                            "force": "false",
                            "waitForExecution": "true",
                            "arguments": "--service-account tiller",
                            "enableTls": "false",
                            "caCert": "",
                            "certificate": "",
                            "privatekey": "",
                            "tillernamespace": ""
                        }
                    },
                    {
                        "environment": {},
                        "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
                        "version": "1.*",
                        "name": "add helm repo",
                        "refName": "",
                        "enabled": true,
                        "alwaysRun": false,
                        "continueOnError": false,
                        "timeoutInMinutes": 0,
                        "definitionType": "task",
                        "overrideInputs": {},
                        "condition": "succeeded()",
                        "inputs": {
                            "connectedServiceNameARM": "AZURE_DEVOPS_SERVICE_CONN_ID_VAR_VAL",
                            "scriptLocation": "inlineScript",
                            "scriptPath": "",
                            "inlineScript": "az acr helm repo add --name $(ACR_NAME)",
                            "args": "",
                            "addSpnToEnvironment": "false",
                            "useGlobalConfig": "false",
                            "cwd": "",
                            "failOnStandardError": "false"
                        }
                    },
                    {
                        "environment": {},
                        "taskId": "afa7d54d-537b-4dc8-b60a-e0eeea2c9a87",
                        "version": "0.*",
                        "name": "helm upgrade ingestion staging",
                        "refName": "",
                        "enabled": true,
                        "alwaysRun": false,
                        "continueOnError": false,
                        "timeoutInMinutes": 0,
                        "definitionType": null,
                        "overrideInputs": {},
                        "condition": "succeeded()",
                        "inputs": {
                            "connectionType": "$(Parameters.connectionType)",
                            "azureSubscriptionEndpoint": "$(Parameters.azureSubscriptionEndpoint)",
                            "azureResourceGroup": "$(Parameters.azureResourceGroup)",
                            "kubernetesCluster": "$(Parameters.kubernetesCluster)",
                            "kubernetesServiceEndpoint": "$(Parameters.kubernetesServiceEndpoint)",
                            "namespace": "backend-staging",
                            "command": "upgrade",
                            "chartType": "Name",
                            "chartName": "$(ACR_NAME)/$(REPO_NAME)",
                            "chartPath": "",
                            "version": "",
                            "releaseName": "$(REPO_NAME)-$(Build.SourceBranchName)-staging",
                            "overrideValues": "image.tag=$(Build.SourceBranchName),image.repository=$(REPO_NAME),dockerregistry=$(ACR_SERVER),ingress.hosts[0].name=$(EXTERNAL_INGEST_FQDN),ingress.hosts[0].serviceName=$(SERVICE_NAME),ingress.hosts[0].tls=true,ingress.hosts[0].tlsSecretName=$(INGRESS_TLS_SECRET_NAME),ingress.tls.secrets[0].name=$(INGRESS_TLS_SECRET_NAME),ingress.tls.secrets[0].key=\"$(INGRESS_TLS_SECRET_KEY)\",ingress.tls.secrets[0].certificate=\"$(INGRESS_TLS_SECRET_CERT)\",secrets.appinsights.ikey=$(AI_IKEY),secrets.queue.keyname=IngestionServiceAccessKey,secrets.queue.keyvalue=$(INGESTION_ACCESS_KEY_VALUE),secrets.queue.name=$(INGESTION_QUEUE_NAME),secrets.queue.namespace=$(INGESTION_QUEUE_NAMESPACE),reason=\"$(REASON)\",tags.staging=true",
                            "valueFile": "",
                            "destination": "",
                            "canaryimage": "false",
                            "upgradetiller": "false",
                            "updatedependency": "false",
                            "save": "true",
                            "install": "true",
                            "recreate": "false",
                            "resetValues": "false",
                            "force": "true",
                            "waitForExecution": "false",
                            "arguments": "--version $(Build.SourceBranchName)",
                            "enableTls": "false",
                            "caCert": "",
                            "certificate": "",
                            "privatekey": "",
                            "tillernamespace": ""
                        }
                    }
                ]
            }],
            "environmentOptions": {
                "emailNotificationType": "OnlyOnFailure",
                "emailRecipients": "release.environment.owner;release.creator",
                "skipArtifactsDownload": false,
                "timeoutInMinutes": 0,
                "enableAccessToken": false,
                "publishDeploymentStatus": true,
                "badgeEnabled": false,
                "autoLinkWorkItems": false,
                "pullRequestDeploymentEnabled": false
            },
            "demands": [],
            "conditions": [{
                "name": "dev",
                "conditionType": 2,
                "value": "4"
            }],
            "executionPolicy": {
                "concurrencyCount": 1,
                "queueDepthCount": 0
            },
            "schedules": [],
            "retentionPolicy": {
                "daysToKeep": 30,
                "releasesToKeep": 3,
                "retainBuild": true
            },
            "processParameters": {
                "inputs": [{
                        "aliases": [],
                        "options": {
                            "Azure Resource Manager": "Azure Resource Manager",
                            "Kubernetes Service Connection": "Kubernetes Service Connection"
                        },
                        "properties": {
                            "EditableOptions": "false"
                        },
                        "name": "connectionType",
                        "label": "Connection Type.",
                        "defaultValue": "Azure Resource Manager",
                        "type": "pickList",
                        "helpMarkDown": "",
                        "groupName": ""
                    },
                    {
                        "aliases": [],
                        "options": {},
                        "properties": {},
                        "name": "azureSubscriptionEndpoint",
                        "label": "Azure subscription",
                        "defaultValue": "AZURE_DEVOPS_SERVICE_CONN_ID_VAR_VAL",
                        "required": true,
                        "type": "connectedService:AzureRM",
                        "helpMarkDown": "Select an Azure subscription, which has your Azure Container Registry.",
                        "visibleRule": "connectionType = Azure Resource Manager",
                        "groupName": ""
                    },
                    {
                        "aliases": [],
                        "options": {},
                        "properties": {
                            "EditableOptions": "True"
                        },
                        "name": "azureResourceGroup",
                        "label": "Resource group",
                        "defaultValue": "RESOURCE_GROUP_VAR_VAL",
                        "required": true,
                        "type": "pickList",
                        "helpMarkDown": "Select an Azure Resource Group.",
                        "visibleRule": "connectionType = Azure Resource Manager",
                        "groupName": ""
                    },
                    {
                        "aliases": [],
                        "options": {},
                        "properties": {
                            "EditableOptions": "True"
                        },
                        "name": "kubernetesCluster",
                        "label": "Kubernetes cluster",
                        "defaultValue": "CLUSTER_NAME_VAR_VAL",
                        "required": true,
                        "type": "pickList",
                        "helpMarkDown": "Select an Azure Kubernetes Service cluster.",
                        "visibleRule": "connectionType = Azure Resource Manager",
                        "groupName": ""
                    },
                    {
                        "aliases": [],
                        "options": {},
                        "properties": {},
                        "name": "kubernetesServiceEndpoint",
                        "label": "Kubernetes Service Connection",
                        "defaultValue": "",
                        "required": true,
                        "type": "connectedService:kubernetes",
                        "helpMarkDown": "Select a Kubernetes service connection.",
                        "visibleRule": "connectionType = Kubernetes Service Connection",
                        "groupName": ""
                    }
                ],
                "dataSourceBindings": [{
                        "parameters": {},
                        "endpointId": "$(azureSubscriptionEndpoint)",
                        "target": "kubernetesCluster",
                        "resultTemplate": "{{{name}}}",
                        "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/resourceGroups/$(azureResourceGroup)/providers/Microsoft.ContainerService/managedClusters?api-version=2017-08-31",
                        "resultSelector": "jsonpath:$.value[*]"
                    },
                    {
                        "parameters": {},
                        "endpointId": "$(azureSubscriptionEndpoint)",
                        "target": "azureResourceGroup",
                        "resultTemplate": "{{{ #extractResource id resourcegroups}}}",
                        "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/providers/Microsoft.ContainerService/managedClusters?api-version=2017-08-31",
                        "resultSelector": "jsonpath:$.value[*]"
                    }
                ]
            },
            "properties": {},
            "preDeploymentGates": {
                "id": 0,
                "gatesOptions": null,
                "gates": []
            },
            "postDeploymentGates": {
                "id": 0,
                "gatesOptions": null,
                "gates": []
            },
            "environmentTriggers": [],
            "badgeUrl": null
        },
        {
            "id": 29,
            "name": "production",
            "rank": 4,
            "owner": {
                "id": "AZURE_DEVOPS_USER_ID_VAR_VAL"
            },
            "variables": {
                "AI_IKEY": {
                    "value": "PROD_AI_IKEY_VAR_VAL",
                    "isSecret": true
                },
                "EXTERNAL_INGEST_FQDN": {
                    "value": "PROD_EXTERNAL_INGEST_FQDN_VAR_VAL"
                },
                "INGESTION_ACCESS_KEY_VALUE": {
                    "value": "PROD_INGESTION_ACCESS_KEY_VALUE_VAR_VAL",
                    "isSecret": true
                },
                "INGESTION_QUEUE_NAME": {
                    "value": "PROD_INGESTION_QUEUE_NAME_VAR_VAL"
                },
                "INGESTION_QUEUE_NAMESPACE": {
                    "value": "PROD_INGESTION_QUEUE_NAMESPACE_VAR_VAL"
                },
                "INGRESS_TLS_SECRET_CERT": {
                    "value": "PROD_INGRESS_TLS_SECRET_CERT_VAR_VAL"
                },
                "INGRESS_TLS_SECRET_KEY": {
                    "value": "PROD_INGRESS_TLS_SECRET_KEY_VAR_VAL",
                    "isSecret": true
                },
                "INGRESS_TLS_SECRET_NAME": {
                    "value": "PROD_INGRESS_TLS_SECRET_NAME_VAR_VAL"
                },
                "SOURCE_ACR_SERVER": {
                    "value": "SOURCE_ACR_SERVER_VAR_VAL"
                },
                "SOURCE_ACR_NAME": {
                    "value": "SOURCE_ACR_NAME_VAR_VAL"
                },
                "ACR_SERVER": {
                    "value": "PROD_ACR_SERVER_VAR_VAL"
                },
                "ACR_NAME": {
                    "value": "PROD_ACR_NAME_VAR_VAL"
                }
            },
            "variableGroups": [],
            "preDeployApprovals": {
                "approvals": [{
                    "rank": 1,
                    "isAutomated": false,
                    "isNotificationOn": false,
                    "approver": {
                        "id": "AZURE_DEVOPS_USER_ID_VAR_VAL"
                    },
                    "id": 81
                }],
                "approvalOptions": {
                    "requiredApproverCount": null,
                    "releaseCreatorCanBeApprover": true,
                    "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
                    "enforceIdentityRevalidation": false,
                    "timeoutInMinutes": 0,
                    "executionOrder": 1
                }
            },
            "deployStep": {
                "id": 82
            },
            "postDeployApprovals": {
                "approvals": [{
                    "rank": 1,
                    "isAutomated": true,
                    "isNotificationOn": false,
                    "id": 89
                }],
                "approvalOptions": {
                    "requiredApproverCount": null,
                    "releaseCreatorCanBeApprover": false,
                    "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
                    "enforceIdentityRevalidation": false,
                    "timeoutInMinutes": 0,
                    "executionOrder": 2
                }
            },
            "deployPhases": [{
                    "deploymentInput": {
                        "parallelExecution": {
                            "parallelExecutionType": 0
                        },
                        "skipArtifactsDownload": false,
                        "artifactsDownloadInput": {
                            "downloadInputs": []
                        },
                        "queueId": AZURE_DEVOPS_INGESTION_QUEUE_ID_VAR_VAL,
                        "demands": [],
                        "enableAccessToken": false,
                        "timeoutInMinutes": 0,
                        "jobCancelTimeoutInMinutes": 1,
                        "condition": "succeeded()",
                        "overrideInputs": {}
                    },
                    "rank": 1,
                    "phaseType": 1,
                    "name": "Agent job",
                    "refName": null,
                    "workflowTasks": [{
                            "environment": {},
                            "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
                            "version": "1.*",
                            "name": "promote ingestion image to production",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "connectedServiceNameARM": "AZURE_DEVOPS_SERVICE_CONN_ID_VAR_VAL",
                                "scriptLocation": "inlineScript",
                                "scriptPath": "",
                                "inlineScript": "az acr import --name $(ACR_NAME) --source $(SOURCE_ACR_SERVER)/$(REPO_NAME):$(Build.SourceBranchName) --force",
                                "args": "",
                                "addSpnToEnvironment": "false",
                                "useGlobalConfig": "false",
                                "cwd": "",
                                "failOnStandardError": "false"
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "068d5909-43e6-48c5-9e01-7c8a94816220",
                            "version": "0.*",
                            "name": "install helm 2.12.3",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "helmVersion": "2.12.3",
                                "checkLatestHelmVersion": "false",
                                "installKubeCtl": "true",
                                "kubectlVersion": "1.12.4",
                                "checkLatestKubeCtl": "false"
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "afa7d54d-537b-4dc8-b60a-e0eeea2c9a87",
                            "version": "0.*",
                            "name": "helm init",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": null,
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "connectionType": "$(Parameters.connectionType)",
                                "azureSubscriptionEndpoint": "$(Parameters.azureSubscriptionEndpoint)",
                                "azureResourceGroup": "$(Parameters.azureResourceGroup)",
                                "kubernetesCluster": "$(Parameters.kubernetesCluster)",
                                "kubernetesServiceEndpoint": "$(Parameters.kubernetesServiceEndpoint)",
                                "namespace": "",
                                "command": "init",
                                "chartType": "Name",
                                "chartName": "",
                                "chartPath": "",
                                "version": "",
                                "releaseName": "",
                                "overrideValues": "",
                                "valueFile": "",
                                "destination": "$(Build.ArtifactStagingDirectory)",
                                "canaryimage": "false",
                                "upgradetiller": "true",
                                "updatedependency": "false",
                                "save": "true",
                                "install": "true",
                                "recreate": "false",
                                "resetValues": "false",
                                "force": "false",
                                "waitForExecution": "true",
                                "arguments": "--service-account tiller",
                                "enableTls": "false",
                                "caCert": "",
                                "certificate": "",
                                "privatekey": "",
                                "tillernamespace": ""
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
                            "version": "1.*",
                            "name": "add helm repo",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "connectedServiceNameARM": "AZURE_DEVOPS_SERVICE_CONN_ID_VAR_VAL",
                                "scriptLocation": "inlineScript",
                                "scriptPath": "",
                                "inlineScript": "az acr helm repo add --name $(SOURCE_ACR_NAME)",
                                "args": "",
                                "addSpnToEnvironment": "false",
                                "useGlobalConfig": "false",
                                "cwd": "",
                                "failOnStandardError": "false"
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "afa7d54d-537b-4dc8-b60a-e0eeea2c9a87",
                            "version": "0.*",
                            "name": "install new ingestion version in the green slot",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": null,
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "connectionType": "$(Parameters.connectionType)",
                                "azureSubscriptionEndpoint": "$(Parameters.azureSubscriptionEndpoint)",
                                "azureResourceGroup": "$(Parameters.azureResourceGroup)",
                                "kubernetesCluster": "$(Parameters.kubernetesCluster)",
                                "kubernetesServiceEndpoint": "$(Parameters.kubernetesServiceEndpoint)",
                                "namespace": "backend",
                                "command": "upgrade",
                                "chartType": "Name",
                                "chartName": "$(SOURCE_ACR_NAME)/$(REPO_NAME)",
                                "chartPath": "",
                                "version": "",
                                "releaseName": "$(REPO_NAME)-$(Build.SourceBranchName)",
                                "overrideValues": "image.tag=$(Build.SourceBranchName),image.repository=$(REPO_NAME),dockerregistry=$(ACR_SERVER),ingress.hosts[0].name=$(EXTERNAL_INGEST_FQDN),ingress.hosts[0].serviceName=$(SERVICE_NAME),ingress.hosts[0].tls=true,ingress.hosts[0].tlsSecretName=$(INGRESS_TLS_SECRET_NAME),ingress.tls.secrets[0].name=$(INGRESS_TLS_SECRET_NAME),ingress.tls.secrets[0].key=\"$(INGRESS_TLS_SECRET_KEY)\",ingress.tls.secrets[0].certificate=\"$(INGRESS_TLS_SECRET_CERT)\",secrets.appinsights.ikey=$(AI_IKEY),secrets.queue.keyname=IngestionServiceAccessKey,secrets.queue.keyvalue=$(INGESTION_ACCESS_KEY_VALUE),secrets.queue.name=$(INGESTION_QUEUE_NAME),secrets.queue.namespace=$(INGESTION_QUEUE_NAMESPACE),reason=\"$(REASON)\",tags.prod=true,ingestion-prod.experimental=true",
                                "valueFile": "",
                                "destination": "",
                                "canaryimage": "false",
                                "upgradetiller": "false",
                                "updatedependency": "false",
                                "save": "true",
                                "install": "true",
                                "recreate": "false",
                                "resetValues": "false",
                                "force": "true",
                                "waitForExecution": "false",
                                "arguments": "--version $(Build.SourceBranchName)",
                                "enableTls": "false",
                                "caCert": "",
                                "certificate": "",
                                "privatekey": "",
                                "tillernamespace": ""
                            }
                        }
                    ]
                },
                {
                    "deploymentInput": {
                        "parallelExecution": {
                            "parallelExecutionType": 0
                        },
                        "timeoutInMinutes": 0,
                        "jobCancelTimeoutInMinutes": 1,
                        "condition": "succeeded()",
                        "overrideInputs": {}
                    },
                    "rank": 2,
                    "phaseType": 2,
                    "name": "Agentless job",
                    "refName": null,
                    "workflowTasks": [{
                        "environment": {},
                        "taskId": "bcb64569-d51a-4af0-9c01-ea5d05b3b622",
                        "version": "8.*",
                        "name": "Swap (blue-green)",
                        "refName": "",
                        "enabled": true,
                        "alwaysRun": false,
                        "continueOnError": false,
                        "timeoutInMinutes": 3600,
                        "definitionType": "task",
                        "overrideInputs": {},
                        "condition": "succeeded()",
                        "inputs": {
                            "instructions": "consider running some canary or just resume for swapping blue and green versions",
                            "emailRecipients": "",
                            "onTimeout": "reject"
                        }
                    }]
                },
                {
                    "deploymentInput": {
                        "parallelExecution": {
                            "parallelExecutionType": 0
                        },
                        "skipArtifactsDownload": false,
                        "artifactsDownloadInput": {
                            "downloadInputs": []
                        },
                        "queueId": AZURE_DEVOPS_INGESTION_QUEUE_ID_VAR_VAL,
                        "demands": [],
                        "enableAccessToken": false,
                        "timeoutInMinutes": 0,
                        "jobCancelTimeoutInMinutes": 1,
                        "condition": "succeeded()",
                        "overrideInputs": {}
                    },
                    "rank": 3,
                    "phaseType": 1,
                    "name": "Agent job (swap)",
                    "refName": null,
                    "workflowTasks": [{
                            "environment": {},
                            "taskId": "cbc316a2-586f-4def-be79-488a1f503564",
                            "version": "1.*",
                            "name": "get current ingestion blue slot version",
                            "refName": "BlueVersion",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "connectionType": "Azure Resource Manager",
                                "kubernetesServiceEndpoint": "",
                                "azureSubscriptionEndpoint": "AZURE_DEVOPS_SERVICE_CONN_ID_VAR_VAL",
                                "azureResourceGroup": "RESOURCE_GROUP_VAR_VAL",
                                "kubernetesCluster": "CLUSTER_NAME_VAR_VAL",
                                "useClusterAdmin": "false",
                                "namespace": "",
                                "command": "get",
                                "useConfigurationFile": "false",
                                "configurationType": "configuration",
                                "configuration": "",
                                "inline": "",
                                "arguments": "-n backend svc/ingestion -o \"jsonpath={.spec.selector['app\\.kubernetes\\.io\\/instance']}\" --ignore-not-found=true",
                                "secretType": "dockerRegistry",
                                "secretArguments": "",
                                "containerRegistryType": "Azure Container Registry",
                                "dockerRegistryEndpoint": "",
                                "azureSubscriptionEndpointForSecrets": "",
                                "azureContainerRegistry": "",
                                "secretName": "",
                                "forceUpdate": "true",
                                "configMapName": "",
                                "forceUpdateConfigMap": "false",
                                "useConfigMapFile": "false",
                                "configMapFile": "",
                                "configMapArguments": "",
                                "versionOrLocation": "version",
                                "versionSpec": "1.12.4",
                                "checkLatest": "false",
                                "specifyLocation": "",
                                "cwd": "$(System.DefaultWorkingDirectory)",
                                "outputFormat": ""
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "068d5909-43e6-48c5-9e01-7c8a94816220",
                            "version": "0.*",
                            "name": "install helm 2.12.3",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "helmVersion": "2.12.3",
                                "checkLatestHelmVersion": "false",
                                "installKubeCtl": "true",
                                "kubectlVersion": "1.12.4",
                                "checkLatestKubeCtl": "false"
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "afa7d54d-537b-4dc8-b60a-e0eeea2c9a87",
                            "version": "0.*",
                            "name": "helm init",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": null,
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "connectionType": "$(Parameters.connectionType)",
                                "azureSubscriptionEndpoint": "$(Parameters.azureSubscriptionEndpoint)",
                                "azureResourceGroup": "$(Parameters.azureResourceGroup)",
                                "kubernetesCluster": "$(Parameters.kubernetesCluster)",
                                "kubernetesServiceEndpoint": "$(Parameters.kubernetesServiceEndpoint)",
                                "namespace": "",
                                "command": "init",
                                "chartType": "Name",
                                "chartName": "",
                                "chartPath": "",
                                "version": "",
                                "releaseName": "",
                                "overrideValues": "",
                                "valueFile": "",
                                "destination": "$(Build.ArtifactStagingDirectory)",
                                "canaryimage": "false",
                                "upgradetiller": "true",
                                "updatedependency": "false",
                                "save": "true",
                                "install": "true",
                                "recreate": "false",
                                "resetValues": "false",
                                "force": "false",
                                "waitForExecution": "true",
                                "arguments": "--service-account tiller",
                                "enableTls": "false",
                                "caCert": "",
                                "certificate": "",
                                "privatekey": "",
                                "tillernamespace": ""
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
                            "version": "1.*",
                            "name": "add helm repo",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "connectedServiceNameARM": "AZURE_DEVOPS_SERVICE_CONN_ID_VAR_VAL",
                                "scriptLocation": "inlineScript",
                                "scriptPath": "",
                                "inlineScript": "az acr helm repo add --name $(SOURCE_ACR_NAME)",
                                "args": "",
                                "addSpnToEnvironment": "false",
                                "useGlobalConfig": "false",
                                "cwd": "",
                                "failOnStandardError": "false"
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "cbc316a2-586f-4def-be79-488a1f503564",
                            "version": "1.*",
                            "name": "swap blue ingestion version to green slot",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "connectionType": "Azure Resource Manager",
                                "kubernetesServiceEndpoint": "",
                                "azureSubscriptionEndpoint": "AZURE_DEVOPS_SERVICE_CONN_ID_VAR_VAL",
                                "azureResourceGroup": "RESOURCE_GROUP_VAR_VAL",
                                "kubernetesCluster": "CLUSTER_NAME_VAR_VAL",
                                "useClusterAdmin": "false",
                                "namespace": "",
                                "command": "set",
                                "useConfigurationFile": "false",
                                "configurationType": "configuration",
                                "configuration": "",
                                "inline": "",
                                "arguments": "selector -n backend svc/ingestion-experimental app.kubernetes.io/name=ingestion,app.kubernetes.io/instance=$(BlueVersion.KubectlOutput)",
                                "secretType": "dockerRegistry",
                                "secretArguments": "",
                                "containerRegistryType": "Azure Container Registry",
                                "dockerRegistryEndpoint": "",
                                "azureSubscriptionEndpointForSecrets": "",
                                "azureContainerRegistry": "",
                                "secretName": "",
                                "forceUpdate": "true",
                                "configMapName": "",
                                "forceUpdateConfigMap": "false",
                                "useConfigMapFile": "false",
                                "configMapFile": "",
                                "configMapArguments": "",
                                "versionOrLocation": "version",
                                "versionSpec": "1.12.4",
                                "checkLatest": "false",
                                "specifyLocation": "",
                                "cwd": "$(System.DefaultWorkingDirectory)",
                                "outputFormat": "json"
                            }
                        },
                        {
                            "environment": {},
                            "taskId": "afa7d54d-537b-4dc8-b60a-e0eeea2c9a87",
                            "version": "0.*",
                            "name": "install new ingestion version in the blue slot",
                            "refName": "",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": null,
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "connectionType": "$(Parameters.connectionType)",
                                "azureSubscriptionEndpoint": "$(Parameters.azureSubscriptionEndpoint)",
                                "azureResourceGroup": "$(Parameters.azureResourceGroup)",
                                "kubernetesCluster": "$(Parameters.kubernetesCluster)",
                                "kubernetesServiceEndpoint": "$(Parameters.kubernetesServiceEndpoint)",
                                "namespace": "backend",
                                "command": "upgrade",
                                "chartType": "Name",
                                "chartName": "$(SOURCE_ACR_NAME)/$(REPO_NAME)",
                                "chartPath": "",
                                "version": "",
                                "releaseName": "$(REPO_NAME)-$(Build.SourceBranchName)",
                                "overrideValues": "image.tag=$(Build.SourceBranchName),image.repository=$(REPO_NAME),dockerregistry=$(ACR_SERVER),ingress.hosts[0].name=$(EXTERNAL_INGEST_FQDN),ingress.hosts[0].serviceName=$(SERVICE_NAME),ingress.hosts[0].tls=true,ingress.hosts[0].tlsSecretName=$(INGRESS_TLS_SECRET_NAME),ingress.tls.secrets[0].name=$(INGRESS_TLS_SECRET_NAME),ingress.tls.secrets[0].key=\"$(INGRESS_TLS_SECRET_KEY)\",ingress.tls.secrets[0].certificate=\"$(INGRESS_TLS_SECRET_CERT)\",secrets.appinsights.ikey=$(AI_IKEY),secrets.queue.keyname=IngestionServiceAccessKey,secrets.queue.keyvalue=$(INGESTION_ACCESS_KEY_VALUE),secrets.queue.name=$(INGESTION_QUEUE_NAME),secrets.queue.namespace=$(INGESTION_QUEUE_NAMESPACE),reason=\"$(REASON)\",tags.prod=true,current=true",
                                "valueFile": "",
                                "destination": "",
                                "canaryimage": "false",
                                "upgradetiller": "false",
                                "updatedependency": "false",
                                "save": "true",
                                "install": "true",
                                "recreate": "false",
                                "resetValues": "false",
                                "force": "true",
                                "waitForExecution": "false",
                                "arguments": "--version $(Build.SourceBranchName)",
                                "enableTls": "false",
                                "caCert": "",
                                "certificate": "",
                                "privatekey": "",
                                "tillernamespace": ""
                            }
                        }
                    ]
                }
            ],
            "environmentOptions": {
                "emailNotificationType": "OnlyOnFailure",
                "emailRecipients": "release.environment.owner;release.creator",
                "skipArtifactsDownload": false,
                "timeoutInMinutes": 0,
                "enableAccessToken": false,
                "publishDeploymentStatus": true,
                "badgeEnabled": false,
                "autoLinkWorkItems": false,
                "pullRequestDeploymentEnabled": false
            },
            "demands": [],
            "conditions": [{
                    "name": "QA",
                    "conditionType": 2,
                    "value": "4"
                },
                {
                    "name": "staging",
                    "conditionType": 2,
                    "value": "4"
                }
            ],
            "executionPolicy": {
                "concurrencyCount": 1,
                "queueDepthCount": 0
            },
            "schedules": [],
            "retentionPolicy": {
                "daysToKeep": 30,
                "releasesToKeep": 3,
                "retainBuild": true
            },
            "processParameters": {
                "inputs": [{
                        "aliases": [],
                        "options": {
                            "Azure Resource Manager": "Azure Resource Manager",
                            "Kubernetes Service Connection": "Kubernetes Service Connection"
                        },
                        "properties": {
                            "EditableOptions": "false"
                        },
                        "name": "connectionType",
                        "label": "Connection Type.",
                        "defaultValue": "Azure Resource Manager",
                        "type": "pickList",
                        "helpMarkDown": "",
                        "groupName": ""
                    },
                    {
                        "aliases": [],
                        "options": {},
                        "properties": {},
                        "name": "azureSubscriptionEndpoint",
                        "label": "Azure subscription",
                        "defaultValue": "AZURE_DEVOPS_SERVICE_CONN_ID_VAR_VAL",
                        "required": true,
                        "type": "connectedService:AzureRM",
                        "helpMarkDown": "Select an Azure subscription, which has your Azure Container Registry.",
                        "visibleRule": "connectionType = Azure Resource Manager",
                        "groupName": ""
                    },
                    {
                        "aliases": [],
                        "options": {},
                        "properties": {
                            "EditableOptions": "True"
                        },
                        "name": "azureResourceGroup",
                        "label": "Resource group",
                        "defaultValue": "RESOURCE_GROUP_VAR_VAL",
                        "required": true,
                        "type": "pickList",
                        "helpMarkDown": "Select an Azure Resource Group.",
                        "visibleRule": "connectionType = Azure Resource Manager",
                        "groupName": ""
                    },
                    {
                        "aliases": [],
                        "options": {},
                        "properties": {
                            "EditableOptions": "True"
                        },
                        "name": "kubernetesCluster",
                        "label": "Kubernetes cluster",
                        "defaultValue": "CLUSTER_NAME_VAR_VAL",
                        "required": true,
                        "type": "pickList",
                        "helpMarkDown": "Select an Azure Kubernetes Service cluster.",
                        "visibleRule": "connectionType = Azure Resource Manager",
                        "groupName": ""
                    },
                    {
                        "aliases": [],
                        "options": {},
                        "properties": {},
                        "name": "kubernetesServiceEndpoint",
                        "label": "Kubernetes Service Connection",
                        "defaultValue": "",
                        "required": true,
                        "type": "connectedService:kubernetes",
                        "helpMarkDown": "Select a Kubernetes service connection.",
                        "visibleRule": "connectionType = Kubernetes Service Connection",
                        "groupName": ""
                    }
                ],
                "dataSourceBindings": [{
                        "parameters": {},
                        "endpointId": "$(azureSubscriptionEndpoint)",
                        "target": "kubernetesCluster",
                        "resultTemplate": "{{{name}}}",
                        "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/resourceGroups/$(azureResourceGroup)/providers/Microsoft.ContainerService/managedClusters?api-version=2017-08-31",
                        "resultSelector": "jsonpath:$.value[*]"
                    },
                    {
                        "parameters": {},
                        "endpointId": "$(azureSubscriptionEndpoint)",
                        "target": "azureResourceGroup",
                        "resultTemplate": "{{{ #extractResource id resourcegroups}}}",
                        "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/providers/Microsoft.ContainerService/managedClusters?api-version=2017-08-31",
                        "resultSelector": "jsonpath:$.value[*]"
                    }
                ]
            },
            "properties": {},
            "preDeploymentGates": {
                "id": 0,
                "gatesOptions": null,
                "gates": []
            },
            "postDeploymentGates": {
                "id": 0,
                "gatesOptions": null,
                "gates": []
            },
            "environmentTriggers": [],
            "badgeUrl": null
        }
    ],
    "artifacts": [{
        "sourceId": "AZURE_DEVOPS_PROJECT_ID_VAR_VAL:AZURE_DEVOPS_INGESTION_BUILD_ID_VAR_VAL",
        "type": "Build",
        "alias": "ci-ingestion",
        "definitionReference": {
            "artifactSourceDefinitionUrl": {
                "id": "",
                "name": ""
            },
            "defaultVersionBranch": {
                "id": "",
                "name": ""
            },
            "defaultVersionSpecific": {
                "id": "",
                "name": ""
            },
            "defaultVersionTags": {
                "id": "",
                "name": ""
            },
            "defaultVersionType": {
                "id": "selectDuringReleaseCreationType",
                "name": "Specify at the time of release creation"
            },
            "definition": {
                "id": "AZURE_DEVOPS_INGESTION_BUILD_ID_VAR_VAL",
                "name": "aks-ri-ci-ingestion"
            },
            "definitions": {
                "id": "",
                "name": ""
            },
            "IsMultiDefinitionType": {
                "id": "False",
                "name": "False"
            },
            "project": {
                "id": "AZURE_DEVOPS_PROJECT_ID_VAR_VAL",
                "name": "roadmap"
            },
            "repository": {
                "id": "AZURE_DEVOPS_REPOS_ID_VAR_VALL",
                "name": "roadmap"
            }
        },
        "isPrimary": true,
        "isRetained": false
    }],
    "triggers": [{
        "artifactAlias": "ci-ingestion",
        "triggerConditions": [{
            "sourceBranch": "release/$(REPO_NAME)/v*",
            "tags": [],
            "useBuildDefinitionBranch": false,
            "createReleaseOnBuildTagging": false
        }],
        "triggerType": 1
    }],
    "releaseNameFormat": "release-$(rev:r)",
    "tags": [],
    "pipelineProcess": {
        "type": 1
    },
    "properties": {
        "DefinitionCreationSource": {
            "$type": "System.String",
            "$value": "ReleaseImport"
        }
    },
    "name": "ingestion-cd",
    "path": null,
    "projectReference": null,
    "url": null
}